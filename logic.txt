#include <math.h>

#define True 1
#define False 0
#define MaxVelocity 1

void CleamRoomHardMode(int m_robot){ //this function positions the robot on the corner 
	//_____________Logic___________________

	v = 1 ;// the variable 'v' represents the percent of velocity will be used, need to stay in range [0,1]
	int last_track = -1 ;//the value of 'last_track' is '-1' for right, and '1' for left
	float theta, distance, vetX, vetY;

	// Room's variables
	int x0_room, y0_room, x1_room, y1_room, width_room, height_room;
	int Room_is_clean = False;
	
	// Robots informations
	int diameter_robot;


	//go find some corner, and go to the corner

	vetX = m_robot->position().x - x0_room; // creating the direction vector of way to be covered
	vetY = m_robot->position().y - y0_room;

	theta = asin(vetX/vetY) * 180 / M_PIf128; //Calculates the angle of the direction vector of way to be covered
	
	m_robot->turn(360 - (180 - m_robot->getAngle() ) + theta ); //The Turn function turns the robot in 'argument' degrees clockwise
						// The getAngle function return the degrees of robot in clockwise, regarding of Right side
	distance = sqrt(pow(vetX, 2) + pow(vetY, 2)); //Calculates the distance that robot need travel to reach the corner

	m_robot->run(distance); //Travel to the corner

	m_robot->turn(360 - m_robot->getAngle()); // Turn the robot to the right

	// NOW THE ROBOT IS POSITIONED

	while(Room_is_clean == False || m_robot->position().y < height_room - diameter_robot/2){ //Stop when the room is clear or the robot arrive the end of room
		//go to the wall
		m_robot->run(width_room);

		//turn 90 degrees, to stand parallel with the wall
		m_robot->turn((360 - m_robot->getAngle() - 90 ) * last_track);

		//travel the diameter of the robot
		m_robot->run(diameter_robot);

		//turn 90 degrees, to stand with the back to the wall
		m_robot->turn((360 - m_robot->getAngle() - 90 ) * last_track);

		// so that in the next loop the robot turn to the other side
		last_track  *= -1;

	}
}
