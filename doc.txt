UNIVERSIDADE FEDERAL DO RIO GRANDE
FARSA - MARXBOT CLEANING EXPERIMENT
RELATÓRIO SEMANAL

Organization of the Documentation

Running the Exemplificative Experiments
    -KinematicRobot: variavel que decide se a simulação vai ser cinematica ou dinamica;
    -da pra definir a cor do robo com hexadecimal;
    -tem 12 leds distribuidos ao redor do robo, e da pra configurar a cor dos leds;
    -robo pode se ligar a outros robos(como um trem);
    -controladores:
        -EnableWheels: rodas.
        -EnableAttachmentDevice: pinça para se ligar a outros robos e objetos especiais.
        -EnableProximityIR: sensores infravermelhos de proximidade ao redor do robo.
        -EnableGroundAroundIR: sensores infravermelhos ao redor do robo que apontam para o chão.
        -EnableGroundBottomIR: um sensor infravermelho que fica abaixo do robo apontando para o chão.
    -Os drawProximityIR , drawGroundAroundIR , drawGroundBottomIR , drawIRRays , drawIRRaysRange podem ser usados para ativar/desativar a exibição gráfica dos sensores ou características dos sensores correspondentes.
    -trecho de código:
        [Component/GA/Experiment/ROBOT]
        type = MarXbot
        kinematicRobot = true
        ledColors = +0000FF +00FF00 +00FF00 +00FF00 +00FF00 +00FF00 +0000FF +0000FF +0000FF +0000FF +0000FF +0000FF
        color = +FFFFFF
    
Creating Custom Sensors or Motors:
    -da pra adicionar mais sensores e motores para o robo, precisea selecionar o componente "Experiment" localizado 
    na terceira janela ao lado esquerdo da interface do total99,  e então usar  "New Subgroup box".
    -Observe que a FARSA não impede que você especifique uma configuração impossível, por exemplo,
    associe um motor de braço iCub a um robô MarxBot com rodas. se fizer algo do tipo o programa vai dar erro ou ter comportamentos inconsistentes.

Controlando as rodas:
    -MarxBotWheelVelocityMotor: Envolve dois neurônios-motores que controlam a velocidade desejada da roda esquerda e direita.
    -MarxBotWheelVelOrientMotor: Envolve dois neurônios-motores que controlam a velocidade e a orientação desejadas do robô.
    -MarxBotAttachmentDeviceMotor: Controla a pinça através da qual o robô pode se conectar a outros robôs.

Sensores:
Os dados de amostra são armazenados nos arquivos "wallSamples.sam", "roundSamples.sam" e "smallSamples.sam" localizados no diretório da experiência.
    -MarxBotProximityIRSensors:
    -MarxBotSampledProximityIRSensor:
    -MarXbotLinearCameraSensor:          Uma câmera que pode ser utilizada para verificar a cor de pequenos objetos coloridos.
    -O MarXbotTractionSensor:            pode ser usado para detectar a tração que a torre do robô exorta no chassi.
    -O MarXbotAttachmentDeviceSensor:    pode ser usado para detectar o estado atual do dispositivo de conexão do robô(a pinça).
    -O MarXbotWheelSpeedsSensor:         É um propriosensor que pode ser usado para detectar a velocidade atual das rodas do robô.
    Usados paradetectar o estado dos sensores:
        --MarXbotGroundAroundIRSensor.
        --MarXbotGroundBottomIRSensor.
    Sensores, motores, e seus parametros são salvos em pastas separadas do arquivo "configuration.ini", segue exemplo:
        [Component/GA/Experiment/Sensor:0]
        type = MarXbotSampledProximityIRSensor
        name = Proximity
        marxbot = robot
        activeSensors = 000000000000101011110101 #apenas 8 sensores estão ativos